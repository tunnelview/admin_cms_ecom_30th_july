{"ast":null,"code":"var _jsxFileName = \"/Users/shibinabraham/Downloads/24-7-2022 admin cms ecom/client/src/pages/reset-password/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { CustomInput } from \"../../components/custom-input/CustomInput\";\nimport { requestOTP } from \"../../helpers/axiosHelper\";\nimport { MainLayout } from \"../../layout/MainLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  _s();\n\n  const [showForm, setShowForm] = useState(\"password\"); // otp || password\n\n  const [email, setEmail] = useState(\"\");\n  const [form, setForm] = useState({});\n  const [error, setError] = useState(\"\");\n  const [disableBtn, setDisableBtn] = useState(true);\n\n  const handleOnChange = e => {\n    let {\n      name,\n      value\n    } = e.target;\n    let hasError = \"\";\n\n    if (name === \"password\" || name === \"confirmPassword\") {\n      !disableBtn && setDisableBtn(true);\n    }\n\n    setForm({ ...form,\n      [name]: value\n    });\n\n    if (name === \"confirmPassword\") {\n      const {\n        password\n      } = form;\n\n      if (password !== value) {\n        hasError = \"Password do not match\";\n      }\n\n      if (password.length < 6) {\n        hasError = \"Password must be longer than 6 characters\";\n      }\n\n      if (!/[a-z]/.test(password)) {\n        hasError = \"Password must contain Lowercase\";\n      }\n\n      if (!/[A-Z]/.test(password)) {\n        hasError = \"Password must contain Uppercase\";\n      }\n\n      if (!/[0-9]/.test(password)) {\n        hasError = \"Password must contain number\";\n      }\n\n      if (!password) {\n        hasError = \"New password must be provided\";\n      }\n\n      setError(hasError);\n      !hasError && setDisableBtn(false);\n    }\n  };\n\n  const handleOnOTPRequest = async e => {\n    e.preventDefault();\n    const responsePromise = requestOTP({\n      email\n    });\n    toast.promise(responsePromise, {\n      pending: \"Please wiat....\"\n    });\n    const {\n      status,\n      message\n    } = await responsePromise;\n    toast[status](message);\n    status === \"success\" && setShowForm(\"password\");\n  };\n\n  const handleOnSubmit = async e => {\n    e.preventDefault();\n    console.log(form); // toast.promise(response, { pending: \"Please wait ...\" });\n    // const { status, message } = await response;\n    // toast[status](message);\n  };\n\n  const otpRequest = {\n    label: \"Request OTP\",\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"eamil@your.co\",\n    required: true\n  };\n  const fields = [{\n    label: \"OTP\",\n    name: \"otp\",\n    placeholder: \"123456\",\n    type: \"number\",\n    required: true\n  }, {\n    label: \"New Password\",\n    name: \"password\",\n    placeholder: \"******\",\n    required: true,\n    type: \"password\"\n  }, {\n    label: \"Confirm Password\",\n    name: \"confirmPassword\",\n    placeholder: \"******\",\n    required: true,\n    type: \"password\"\n  }];\n  console.log(form);\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reg-form d-flex justify-content-center mt-5\",\n      children: [showForm === \"otp\" && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleOnOTPRequest,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Forget Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-3\",\n          children: \"Request an OTP to reset your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, { ...otpRequest,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"submit\",\n          className: \"btn btn-outline-danger\",\n          value: \"Request OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), showForm === \"password\" && /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"py-3\",\n          children: \"Reset you new password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), fields.map((field, i) => /*#__PURE__*/_jsxDEV(CustomInput, { ...field,\n          onChange: handleOnChange\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Text, {\n            muted: true,\n            children: \"New Password should contain atleaset one uppdercase, one lowercase, a number and minimun of 6 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-danger fs-3 fw-bolder\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n          type: \"submit\",\n          className: \"btn btn-danger\",\n          value: \"Update password\",\n          disabled: disableBtn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right mt-5\",\n          onClick: () => setShowForm(\"otp\"),\n          style: {\n            cursor: \"pointer\"\n          },\n          children: [\" \", \"Request OTP again\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"YWyjdiwLCkMeTaS/zoLeS5zIwMk=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useRef","useState","Form","toast","CustomInput","requestOTP","MainLayout","ResetPassword","showForm","setShowForm","email","setEmail","form","setForm","error","setError","disableBtn","setDisableBtn","handleOnChange","e","name","value","target","hasError","password","length","test","handleOnOTPRequest","preventDefault","responsePromise","promise","pending","status","message","handleOnSubmit","console","log","otpRequest","label","type","placeholder","required","fields","map","field","i","cursor"],"sources":["/Users/shibinabraham/Downloads/24-7-2022 admin cms ecom/client/src/pages/reset-password/ResetPassword.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { CustomInput } from \"../../components/custom-input/CustomInput\";\nimport { requestOTP } from \"../../helpers/axiosHelper\";\nimport { MainLayout } from \"../../layout/MainLayout\";\n\nconst ResetPassword = () => {\n  const [showForm, setShowForm] = useState(\"password\"); // otp || password\n  const [email, setEmail] = useState(\"\");\n\n  const [form, setForm] = useState({});\n  const [error, setError] = useState(\"\");\n  const [disableBtn, setDisableBtn] = useState(true);\n\n  const handleOnChange = (e) => {\n    let { name, value } = e.target;\n\n    let hasError = \"\";\n\n    if (name === \"password\" || name === \"confirmPassword\") {\n      !disableBtn && setDisableBtn(true);\n    }\n\n    setForm({\n      ...form,\n      [name]: value,\n    });\n\n    if (name === \"confirmPassword\") {\n      const { password } = form;\n\n      if (password !== value) {\n        hasError = \"Password do not match\";\n      }\n\n      if (password.length < 6) {\n        hasError = \"Password must be longer than 6 characters\";\n      }\n\n      if (!/[a-z]/.test(password)) {\n        hasError = \"Password must contain Lowercase\";\n      }\n\n      if (!/[A-Z]/.test(password)) {\n        hasError = \"Password must contain Uppercase\";\n      }\n\n      if (!/[0-9]/.test(password)) {\n        hasError = \"Password must contain number\";\n      }\n\n      if (!password) {\n        hasError = \"New password must be provided\";\n      }\n\n      setError(hasError);\n      !hasError && setDisableBtn(false);\n    }\n  };\n\n  const handleOnOTPRequest = async (e) => {\n    e.preventDefault();\n\n    const responsePromise = requestOTP({ email });\n    toast.promise(responsePromise, { pending: \"Please wiat....\" });\n\n    const { status, message } = await responsePromise;\n    toast[status](message);\n    status === \"success\" && setShowForm(\"password\");\n  };\n\n  const handleOnSubmit = async (e) => {\n    e.preventDefault();\n    console.log(form);\n\n    // toast.promise(response, { pending: \"Please wait ...\" });\n    // const { status, message } = await response;\n    // toast[status](message);\n  };\n\n  const otpRequest = {\n    label: \"Request OTP\",\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"eamil@your.co\",\n    required: true,\n  };\n\n  const fields = [\n    {\n      label: \"OTP\",\n      name: \"otp\",\n      placeholder: \"123456\",\n      type: \"number\",\n      required: true,\n    },\n    {\n      label: \"New Password\",\n      name: \"password\",\n      placeholder: \"******\",\n      required: true,\n      type: \"password\",\n    },\n    {\n      label: \"Confirm Password\",\n      name: \"confirmPassword\",\n      placeholder: \"******\",\n      required: true,\n      type: \"password\",\n    },\n  ];\n  console.log(form);\n  return (\n    <MainLayout>\n      <div className=\"reg-form d-flex justify-content-center mt-5\">\n        {showForm === \"otp\" && (\n          <Form onSubmit={handleOnOTPRequest}>\n            <h3>Forget Password?</h3>\n            <hr />\n            <div className=\"py-3\">Request an OTP to reset your password</div>\n            <CustomInput\n              {...otpRequest}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <CustomInput\n              type=\"submit\"\n              className=\"btn btn-outline-danger\"\n              value=\"Request OTP\"\n            />\n          </Form>\n        )}\n\n        {showForm === \"password\" && (\n          <Form onSubmit={handleOnSubmit}>\n            <h3>Reset Password</h3>\n            <hr />\n            <div className=\"py-3\">Reset you new password</div>\n\n            {fields.map((field, i) => (\n              <CustomInput key={i} {...field} onChange={handleOnChange} />\n            ))}\n\n            <Form.Group>\n              <Form.Text muted>\n                New Password should contain atleaset one uppdercase, one\n                lowercase, a number and minimun of 6 characters\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mt-3\">\n              <Form.Text className=\"text-danger fs-3 fw-bolder\">\n                {error}\n              </Form.Text>\n            </Form.Group>\n\n            <CustomInput\n              type=\"submit\"\n              className=\"btn btn-danger\"\n              value=\"Update password\"\n              disabled={disableBtn}\n            />\n            <div\n              className=\"text-right mt-5\"\n              onClick={() => setShowForm(\"otp\")}\n              style={{ cursor: \"pointer\" }}\n            >\n              {\" \"}\n              Request OTP again\n            </div>\n          </Form>\n        )}\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}