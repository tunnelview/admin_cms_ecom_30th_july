{"ast":null,"code":"import axios from \"axios\";\nconst rootUrl = \"http://localhost:8000/api/v1\";\nconst loginRegisterEP = rootUrl + \"/register-login\";\nconst loginEp = loginRegisterEP + \"/login\";\nconst catEP = rootUrl + \"/categories\";\nconst paymentMethodEP = rootUrl + \"/payment-method\";\nconst adminEp = rootUrl + \"/admin\";\n\nconst apiProcessor = async (method, url, data) => {\n  try {\n    const response = await axios({\n      method,\n      url,\n      data\n    });\n    return response.data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message\n    };\n  }\n};\n\nexport const postAdminUser = obj => {\n  return apiProcessor(\"post\", loginRegisterEP, obj);\n};\nexport const emailVerificationAdminUser = obj => {\n  return apiProcessor(\"patch\", loginRegisterEP, obj);\n};\nexport const loginAdminUser = obj => {\n  return apiProcessor(\"post\", loginEp, obj);\n}; // ==== category api call\n\nexport const fetchCategory = _id => {\n  const url = _id ? catEP + \"/\" + _id : catEP;\n  return apiProcessor(\"get\", url);\n};\nexport const postCategory = obj => {\n  return apiProcessor(\"post\", catEP, obj);\n};\nexport const deleteCategories = obj => {\n  return apiProcessor(\"delete\", catEP, obj);\n};\nexport const updateCategory = obj => {\n  return apiProcessor(\"put\", catEP, obj);\n}; // ===== payment methods\n\nexport const fetchPaymentMethods = () => {\n  return apiProcessor(\"get\", paymentMethodEP);\n};\nexport const postPaymentMethod = obj => {\n  return apiProcessor(\"post\", paymentMethodEP, obj);\n};\nexport const deletePaymentMethod = _id => {\n  return apiProcessor(\"delete\", paymentMethodEP + \"/\" + _id);\n};\nexport const updatePaymentMethod = obj => {\n  return apiProcessor(\"put\", paymentMethodEP, obj);\n}; // ======== admin user\n\nexport const updateAdminPassword = obj => {\n  return apiProcessor(\"patch\", adminEp, obj);\n};\nexport const updateAdminProfile = obj => {\n  return apiProcessor(\"put\", adminEp, obj);\n}; // ========= Password reset\n\nexport const requestOTP = obj => {\n  return apiProcessor(\"post\", loginRegisterEP + \"/otp-request\", obj);\n};","map":{"version":3,"names":["axios","rootUrl","loginRegisterEP","loginEp","catEP","paymentMethodEP","adminEp","apiProcessor","method","url","data","response","error","status","message","postAdminUser","obj","emailVerificationAdminUser","loginAdminUser","fetchCategory","_id","postCategory","deleteCategories","updateCategory","fetchPaymentMethods","postPaymentMethod","deletePaymentMethod","updatePaymentMethod","updateAdminPassword","updateAdminProfile","requestOTP"],"sources":["/Users/shibinabraham/Downloads/24-7-2022 admin cms ecom/client/src/helpers/axiosHelper.js"],"sourcesContent":["import axios from \"axios\";\n\nconst rootUrl = \"http://localhost:8000/api/v1\";\nconst loginRegisterEP = rootUrl + \"/register-login\";\nconst loginEp = loginRegisterEP + \"/login\";\nconst catEP = rootUrl + \"/categories\";\nconst paymentMethodEP = rootUrl + \"/payment-method\";\nconst adminEp = rootUrl + \"/admin\";\n\nconst apiProcessor = async (method, url, data) => {\n  try {\n    const response = await axios({\n      method,\n      url,\n      data,\n    });\n\n    return response.data;\n  } catch (error) {\n    return {\n      status: \"error\",\n      message: error.message,\n    };\n  }\n};\n\nexport const postAdminUser = (obj) => {\n  return apiProcessor(\"post\", loginRegisterEP, obj);\n};\n\nexport const emailVerificationAdminUser = (obj) => {\n  return apiProcessor(\"patch\", loginRegisterEP, obj);\n};\n\nexport const loginAdminUser = (obj) => {\n  return apiProcessor(\"post\", loginEp, obj);\n};\n\n// ==== category api call\nexport const fetchCategory = (_id) => {\n  const url = _id ? catEP + \"/\" + _id : catEP;\n  return apiProcessor(\"get\", url);\n};\nexport const postCategory = (obj) => {\n  return apiProcessor(\"post\", catEP, obj);\n};\n\nexport const deleteCategories = (obj) => {\n  return apiProcessor(\"delete\", catEP, obj);\n};\n\nexport const updateCategory = (obj) => {\n  return apiProcessor(\"put\", catEP, obj);\n};\n\n// ===== payment methods\nexport const fetchPaymentMethods = () => {\n  return apiProcessor(\"get\", paymentMethodEP);\n};\n\nexport const postPaymentMethod = (obj) => {\n  return apiProcessor(\"post\", paymentMethodEP, obj);\n};\n\nexport const deletePaymentMethod = (_id) => {\n  return apiProcessor(\"delete\", paymentMethodEP + \"/\" + _id);\n};\n\nexport const updatePaymentMethod = (obj) => {\n  return apiProcessor(\"put\", paymentMethodEP, obj);\n};\n\n// ======== admin user\nexport const updateAdminPassword = (obj) => {\n  return apiProcessor(\"patch\", adminEp, obj);\n};\n\nexport const updateAdminProfile = (obj) => {\n  return apiProcessor(\"put\", adminEp, obj);\n};\n\n// ========= Password reset\nexport const requestOTP = (obj) => {\n  return apiProcessor(\"post\", loginRegisterEP + \"/otp-request\", obj);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}